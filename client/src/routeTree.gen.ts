/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TrainingchatImport } from './routes/trainingchat'
import { Route as AuthImport } from './routes/auth'
import { Route as AppImport } from './routes/_app'
import { Route as AppVoiceChatImport } from './routes/_app/voice-chat'
import { Route as AppDashboardImport } from './routes/_app/dashboard'

// Create/Update Routes

const TrainingchatRoute = TrainingchatImport.update({
  id: '/trainingchat',
  path: '/trainingchat',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppVoiceChatRoute = AppVoiceChatImport.update({
  id: '/voice-chat',
  path: '/voice-chat',
  getParentRoute: () => AppRoute,
} as any)

const AppDashboardRoute = AppDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/trainingchat': {
      id: '/trainingchat'
      path: '/trainingchat'
      fullPath: '/trainingchat'
      preLoaderRoute: typeof TrainingchatImport
      parentRoute: typeof rootRoute
    }
    '/_app/dashboard': {
      id: '/_app/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AppDashboardImport
      parentRoute: typeof AppImport
    }
    '/_app/voice-chat': {
      id: '/_app/voice-chat'
      path: '/voice-chat'
      fullPath: '/voice-chat'
      preLoaderRoute: typeof AppVoiceChatImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppDashboardRoute: typeof AppDashboardRoute
  AppVoiceChatRoute: typeof AppVoiceChatRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppDashboardRoute: AppDashboardRoute,
  AppVoiceChatRoute: AppVoiceChatRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AppRouteWithChildren
  '/auth': typeof AuthRoute
  '/trainingchat': typeof TrainingchatRoute
  '/dashboard': typeof AppDashboardRoute
  '/voice-chat': typeof AppVoiceChatRoute
}

export interface FileRoutesByTo {
  '': typeof AppRouteWithChildren
  '/auth': typeof AuthRoute
  '/trainingchat': typeof TrainingchatRoute
  '/dashboard': typeof AppDashboardRoute
  '/voice-chat': typeof AppVoiceChatRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/auth': typeof AuthRoute
  '/trainingchat': typeof TrainingchatRoute
  '/_app/dashboard': typeof AppDashboardRoute
  '/_app/voice-chat': typeof AppVoiceChatRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/auth' | '/trainingchat' | '/dashboard' | '/voice-chat'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/auth' | '/trainingchat' | '/dashboard' | '/voice-chat'
  id:
    | '__root__'
    | '/_app'
    | '/auth'
    | '/trainingchat'
    | '/_app/dashboard'
    | '/_app/voice-chat'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRoute
  TrainingchatRoute: typeof TrainingchatRoute
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRoute,
  TrainingchatRoute: TrainingchatRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/auth",
        "/trainingchat"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/dashboard",
        "/_app/voice-chat"
      ]
    },
    "/auth": {
      "filePath": "auth.tsx"
    },
    "/trainingchat": {
      "filePath": "trainingchat.tsx"
    },
    "/_app/dashboard": {
      "filePath": "_app/dashboard.tsx",
      "parent": "/_app"
    },
    "/_app/voice-chat": {
      "filePath": "_app/voice-chat.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
